{
	"id": "4c7963d34eff54fdb01c6662d92ac406",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/access/RoleAccess.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract RoleAccess {\r\n    address owner;\r\n    enum Role {\r\n        NONE,\r\n        ADMIN,\r\n        CUSTOMER\r\n    }\r\n    mapping(address => Role) public roles;\r\n\r\n    modifier onlyAdmin() {\r\n        require(roles[msg.sender] == Role.ADMIN, \"You are not admin\");\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner, \"Only owner can perform this function\");\r\n        _;\r\n    }\r\n     constructor(){\r\n        owner =msg.sender;\r\n    }\r\n     function getOwner () public view returns (address){\r\n        return owner;\r\n    }\r\n    function addAdmin(address _admin) external virtual  {\r\n        // implement quyền cấp cao hơn nếu cần\r\n        roles[_admin] = Role.ADMIN;\r\n    }\r\n    function isAdmin(address _addr) external view returns (bool) {\r\n        return roles[_addr] == Role.ADMIN;\r\n    }\r\n\r\n    function removeAdmin(address _admin) external {\r\n        roles[_admin] = Role.NONE;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/access/RoleAccess.sol": {
				"RoleAccess": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "removeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "enum RoleAccess.Role",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/access/RoleAccess.sol\":60:994  contract RoleAccess {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/access/RoleAccess.sol\":477:526  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/access/RoleAccess.sol\":508:518  msg.sender */\n  caller\n    /* \"contracts/access/RoleAccess.sol\":501:506  owner */\n  0x00\n  0x00\n    /* \"contracts/access/RoleAccess.sol\":501:518  owner =msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/RoleAccess.sol\":60:994  contract RoleAccess {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/access/RoleAccess.sol\":60:994  contract RoleAccess {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1785f53c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x99374642\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/access/RoleAccess.sol\":901:991  function removeAdmin(address _admin) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/access/RoleAccess.sol\":780:893  function isAdmin(address _addr) external view returns (bool) {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/RoleAccess.sol\":620:774  function addAdmin(address _admin) external virtual  {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/access/RoleAccess.sol\":533:614  function getOwner () public view returns (address){... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/RoleAccess.sol\":180:217  mapping(address => Role) public roles */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/RoleAccess.sol\":901:991  function removeAdmin(address _admin) external {... */\n    tag_11:\n        /* \"contracts/access/RoleAccess.sol\":974:983  Role.NONE */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":958:963  roles */\n      0x01\n        /* \"contracts/access/RoleAccess.sol\":958:971  roles[_admin] */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":964:970  _admin */\n      dup4\n        /* \"contracts/access/RoleAccess.sol\":958:971  roles[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":958:983  roles[_admin] = Role.NONE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n    tag_30:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/RoleAccess.sol\":901:991  function removeAdmin(address _admin) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/access/RoleAccess.sol\":780:893  function isAdmin(address _addr) external view returns (bool) {... */\n    tag_14:\n        /* \"contracts/access/RoleAccess.sol\":835:839  bool */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":875:885  Role.ADMIN */\n      0x01\n        /* \"contracts/access/RoleAccess.sol\":859:885  roles[_addr] == Role.ADMIN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      tag_35\n      tag_32\n      jump\t// in\n    tag_35:\n    tag_34:\n        /* \"contracts/access/RoleAccess.sol\":859:864  roles */\n      0x01\n        /* \"contracts/access/RoleAccess.sol\":859:871  roles[_addr] */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":865:870  _addr */\n      dup5\n        /* \"contracts/access/RoleAccess.sol\":859:871  roles[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/access/RoleAccess.sol\":859:885  roles[_addr] == Role.ADMIN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_32\n      jump\t// in\n    tag_37:\n    tag_36:\n      eq\n        /* \"contracts/access/RoleAccess.sol\":852:885  return roles[_addr] == Role.ADMIN */\n      swap1\n      pop\n        /* \"contracts/access/RoleAccess.sol\":780:893  function isAdmin(address _addr) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/RoleAccess.sol\":620:774  function addAdmin(address _admin) external virtual  {... */\n    tag_19:\n        /* \"contracts/access/RoleAccess.sol\":756:766  Role.ADMIN */\n      0x01\n        /* \"contracts/access/RoleAccess.sol\":740:745  roles */\n      dup1\n        /* \"contracts/access/RoleAccess.sol\":740:753  roles[_admin] */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":746:752  _admin */\n      dup4\n        /* \"contracts/access/RoleAccess.sol\":740:753  roles[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":740:766  roles[_admin] = Role.ADMIN */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      tag_40\n      tag_32\n      jump\t// in\n    tag_40:\n    tag_39:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/RoleAccess.sol\":620:774  function addAdmin(address _admin) external virtual  {... */\n      pop\n      jump\t// out\n        /* \"contracts/access/RoleAccess.sol\":533:614  function getOwner () public view returns (address){... */\n    tag_21:\n        /* \"contracts/access/RoleAccess.sol\":575:582  address */\n      0x00\n        /* \"contracts/access/RoleAccess.sol\":601:606  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/RoleAccess.sol\":594:606  return owner */\n      swap1\n      pop\n        /* \"contracts/access/RoleAccess.sol\":533:614  function getOwner () public view returns (address){... */\n      swap1\n      jump\t// out\n        /* \"contracts/access/RoleAccess.sol\":180:217  mapping(address => Role) public roles */\n    tag_26:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_43:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_45:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_46:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_62\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_45\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_47:\n        /* \"#utility.yul\":641:665   */\n      tag_64\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_46\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_65:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_48:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_67\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_47\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_70\n      tag_43\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":917:1036   */\n    tag_69:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_71\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_48\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_49:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_50:\n        /* \"#utility.yul\":1353:1374   */\n      tag_74\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_49\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_16:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_76\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_50\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_51:\n        /* \"#utility.yul\":1690:1714   */\n      tag_78\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_46\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_23:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_80\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_51\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2135   */\n    tag_32:\n        /* \"#utility.yul\":2003:2080   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2000:2001   */\n      0x00\n        /* \"#utility.yul\":1993:2081   */\n      mstore\n        /* \"#utility.yul\":2100:2104   */\n      0x21\n        /* \"#utility.yul\":2097:2098   */\n      0x04\n        /* \"#utility.yul\":2090:2105   */\n      mstore\n        /* \"#utility.yul\":2124:2128   */\n      0x24\n        /* \"#utility.yul\":2121:2122   */\n      0x00\n        /* \"#utility.yul\":2114:2129   */\n      revert\n        /* \"#utility.yul\":2141:2252   */\n    tag_52:\n        /* \"#utility.yul\":2220:2221   */\n      0x03\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2210:2222   */\n      lt\n        /* \"#utility.yul\":2200:2246   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2226:2244   */\n      tag_84\n      tag_32\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2200:2246   */\n    tag_83:\n        /* \"#utility.yul\":2141:2252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2258:2381   */\n    tag_53:\n        /* \"#utility.yul\":2301:2308   */\n      0x00\n        /* \"#utility.yul\":2330:2335   */\n      dup2\n        /* \"#utility.yul\":2319:2335   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2375   */\n      tag_86\n        /* \"#utility.yul\":2369:2374   */\n      dup3\n        /* \"#utility.yul\":2336:2375   */\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2258:2381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2387:2510   */\n    tag_54:\n        /* \"#utility.yul\":2441:2450   */\n      0x00\n        /* \"#utility.yul\":2474:2504   */\n      tag_88\n        /* \"#utility.yul\":2498:2503   */\n      dup3\n        /* \"#utility.yul\":2474:2504   */\n      tag_53\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2461:2504   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2516:2655   */\n    tag_55:\n        /* \"#utility.yul\":2607:2648   */\n      tag_90\n        /* \"#utility.yul\":2642:2647   */\n      dup2\n        /* \"#utility.yul\":2607:2648   */\n      tag_54\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2602:2605   */\n      dup3\n        /* \"#utility.yul\":2595:2649   */\n      mstore\n        /* \"#utility.yul\":2516:2655   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2661:2891   */\n    tag_28:\n        /* \"#utility.yul\":2758:2762   */\n      0x00\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2785:2794   */\n      dup3\n        /* \"#utility.yul\":2781:2799   */\n      add\n        /* \"#utility.yul\":2773:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2809:2884   */\n      tag_92\n        /* \"#utility.yul\":2881:2882   */\n      0x00\n        /* \"#utility.yul\":2870:2879   */\n      dup4\n        /* \"#utility.yul\":2866:2883   */\n      add\n        /* \"#utility.yul\":2857:2863   */\n      dup5\n        /* \"#utility.yul\":2809:2884   */\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2661:2891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c307455a8ae15a02730352eeeafd3b88d4c56c0bf0597a9a3ac9101d2cd286de64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104408061005b5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80631785f53c1461005957806324d7806c1461007557806370480275146100a5578063893d20e8146100c157806399374642146100df575b5f5ffd5b610073600480360381019061006e91906102f8565b61010f565b005b61008f600480360381019061008a91906102f8565b610176565b60405161009c919061033d565b60405180910390f35b6100bf60048036038101906100ba91906102f8565b6101ef565b005b6100c9610256565b6040516100d69190610365565b60405180910390f35b6100f960048036038101906100f491906102f8565b61027d565b60405161010691906103f1565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561016e5761016d61037e565b5b021790555050565b5f6001600281111561018b5761018a61037e565b5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156101e7576101e661037e565b5b149050919050565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561024e5761024d61037e565b5b021790555050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102c78261029e565b9050919050565b6102d7816102bd565b81146102e1575f5ffd5b50565b5f813590506102f2816102ce565b92915050565b5f6020828403121561030d5761030c61029a565b5b5f61031a848285016102e4565b91505092915050565b5f8115159050919050565b61033781610323565b82525050565b5f6020820190506103505f83018461032e565b92915050565b61035f816102bd565b82525050565b5f6020820190506103785f830184610356565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106103bc576103bb61037e565b5b50565b5f8190506103cc826103ab565b919050565b5f6103db826103bf565b9050919050565b6103eb816103d1565b82525050565b5f6020820190506104045f8301846103e2565b9291505056fea2646970667358221220c307455a8ae15a02730352eeeafd3b88d4c56c0bf0597a9a3ac9101d2cd286de64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x440 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1785F53C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x37E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x37E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E6 PUSH2 0x37E JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x37E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C7 DUP3 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F2 DUP2 PUSH2 0x2CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D JUMPI PUSH2 0x30C PUSH2 0x29A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31A DUP5 DUP3 DUP6 ADD PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x323 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x350 PUSH0 DUP4 ADD DUP5 PUSH2 0x32E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35F DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x378 PUSH0 DUP4 ADD DUP5 PUSH2 0x356 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3BC JUMPI PUSH2 0x3BB PUSH2 0x37E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x3CC DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3DB DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x404 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SMOD GASLIMIT GAS DUP11 RJUMPI 0x5A02 PUSH20 0x352EEEAFD3B88D4C56C0BF0597A9A3AC9101D2C 0xD2 DUP7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "60:934:0:-:0;;;477:49;;;;;;;;;;508:10;501:5;;:17;;;;;;;;;;;;;;;;;;60:934;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addAdmin_69": {
									"entryPoint": 495,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getOwner_56": {
									"entryPoint": 598,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isAdmin_84": {
									"entryPoint": 374,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeAdmin_97": {
									"entryPoint": 271,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@roles_12": {
									"entryPoint": 637,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Role_$7_to_t_uint8_fromStack": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$7__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Role_$7": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Role_$7_to_t_uint8": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Role_$7": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2894:1",
										"nodeType": "YulBlock",
										"src": "0:2894:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											},
											{
												"body": {
													"nativeSrc": "1668:53:1",
													"nodeType": "YulBlock",
													"src": "1668:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:1"
																		},
																		"nativeSrc": "1690:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nativeSrc": "1678:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:1"
															},
															"nativeSrc": "1678:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:1",
														"nodeType": "YulTypedName",
														"src": "1656:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:1",
														"nodeType": "YulTypedName",
														"src": "1663:3:1",
														"type": ""
													}
												],
												"src": "1603:118:1"
											},
											{
												"body": {
													"nativeSrc": "1825:124:1",
													"nodeType": "YulBlock",
													"src": "1825:124:1",
													"statements": [
														{
															"nativeSrc": "1835:26:1",
															"nodeType": "YulAssignment",
															"src": "1835:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:1"
																},
																"nativeSrc": "1843:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:1"
																		},
																		"nativeSrc": "1924:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:1"
																},
																"nativeSrc": "1871:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:1"
															},
															"nativeSrc": "1871:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:1",
														"nodeType": "YulTypedName",
														"src": "1797:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:1",
														"nodeType": "YulTypedName",
														"src": "1809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:1",
														"nodeType": "YulTypedName",
														"src": "1820:4:1",
														"type": ""
													}
												],
												"src": "1727:222:1"
											},
											{
												"body": {
													"nativeSrc": "1983:152:1",
													"nodeType": "YulBlock",
													"src": "1983:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2000:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2000:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2003:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2003:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1993:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:1"
																},
																"nativeSrc": "1993:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1993:88:1"
															},
															"nativeSrc": "1993:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1993:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2100:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:15:1"
															},
															"nativeSrc": "2090:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2124:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:1"
																},
																"nativeSrc": "2114:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2114:15:1"
															},
															"nativeSrc": "2114:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2114:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1955:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1955:180:1"
											},
											{
												"body": {
													"nativeSrc": "2190:62:1",
													"nodeType": "YulBlock",
													"src": "2190:62:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:22:1",
																"nodeType": "YulBlock",
																"src": "2224:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "2226:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2226:16:1"
																			},
																			"nativeSrc": "2226:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:18:1"
																		},
																		"nativeSrc": "2226:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2213:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2220:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2220:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2210:2:1"
																		},
																		"nativeSrc": "2210:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2210:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:1"
																},
																"nativeSrc": "2203:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2203:20:1"
															},
															"nativeSrc": "2200:46:1",
															"nodeType": "YulIf",
															"src": "2200:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Role_$7",
												"nativeSrc": "2141:111:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2183:5:1",
														"nodeType": "YulTypedName",
														"src": "2183:5:1",
														"type": ""
													}
												],
												"src": "2141:111:1"
											},
											{
												"body": {
													"nativeSrc": "2309:72:1",
													"nodeType": "YulBlock",
													"src": "2309:72:1",
													"statements": [
														{
															"nativeSrc": "2319:16:1",
															"nodeType": "YulAssignment",
															"src": "2319:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2330:5:1",
																"nodeType": "YulIdentifier",
																"src": "2330:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2319:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2319:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2369:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2369:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Role_$7",
																	"nativeSrc": "2336:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2336:32:1"
																},
																"nativeSrc": "2336:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2336:39:1"
															},
															"nativeSrc": "2336:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "2336:39:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Role_$7",
												"nativeSrc": "2258:123:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2291:5:1",
														"nodeType": "YulTypedName",
														"src": "2291:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2301:7:1",
														"nodeType": "YulTypedName",
														"src": "2301:7:1",
														"type": ""
													}
												],
												"src": "2258:123:1"
											},
											{
												"body": {
													"nativeSrc": "2451:59:1",
													"nodeType": "YulBlock",
													"src": "2451:59:1",
													"statements": [
														{
															"nativeSrc": "2461:43:1",
															"nodeType": "YulAssignment",
															"src": "2461:43:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2498:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2498:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Role_$7",
																	"nativeSrc": "2474:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "2474:23:1"
																},
																"nativeSrc": "2474:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2474:30:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2461:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2461:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Role_$7_to_t_uint8",
												"nativeSrc": "2387:123:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2431:5:1",
														"nodeType": "YulTypedName",
														"src": "2431:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2441:9:1",
														"nodeType": "YulTypedName",
														"src": "2441:9:1",
														"type": ""
													}
												],
												"src": "2387:123:1"
											},
											{
												"body": {
													"nativeSrc": "2585:70:1",
													"nodeType": "YulBlock",
													"src": "2585:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2602:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2602:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2642:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2642:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Role_$7_to_t_uint8",
																			"nativeSrc": "2607:34:1",
																			"nodeType": "YulIdentifier",
																			"src": "2607:34:1"
																		},
																		"nativeSrc": "2607:41:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2595:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:1"
																},
																"nativeSrc": "2595:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2595:54:1"
															},
															"nativeSrc": "2595:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "2595:54:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Role_$7_to_t_uint8_fromStack",
												"nativeSrc": "2516:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2573:5:1",
														"nodeType": "YulTypedName",
														"src": "2573:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2580:3:1",
														"nodeType": "YulTypedName",
														"src": "2580:3:1",
														"type": ""
													}
												],
												"src": "2516:139:1"
											},
											{
												"body": {
													"nativeSrc": "2763:128:1",
													"nodeType": "YulBlock",
													"src": "2763:128:1",
													"statements": [
														{
															"nativeSrc": "2773:26:1",
															"nodeType": "YulAssignment",
															"src": "2773:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2785:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2796:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2781:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:1"
																},
																"nativeSrc": "2781:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2781:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2773:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2857:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2857:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2881:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2881:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2866:3:1"
																		},
																		"nativeSrc": "2866:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2866:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Role_$7_to_t_uint8_fromStack",
																	"nativeSrc": "2809:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "2809:47:1"
																},
																"nativeSrc": "2809:75:1",
																"nodeType": "YulFunctionCall",
																"src": "2809:75:1"
															},
															"nativeSrc": "2809:75:1",
															"nodeType": "YulExpressionStatement",
															"src": "2809:75:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$7__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2661:230:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2735:9:1",
														"nodeType": "YulTypedName",
														"src": "2735:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2747:6:1",
														"nodeType": "YulTypedName",
														"src": "2747:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2758:4:1",
														"nodeType": "YulTypedName",
														"src": "2758:4:1",
														"type": ""
													}
												],
												"src": "2661:230:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Role_$7(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Role_$7(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Role_$7(value)\n    }\n\n    function convert_t_enum$_Role_$7_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Role_$7(value)\n    }\n\n    function abi_encode_t_enum$_Role_$7_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Role_$7_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Role_$7__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Role_$7_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80631785f53c1461005957806324d7806c1461007557806370480275146100a5578063893d20e8146100c157806399374642146100df575b5f5ffd5b610073600480360381019061006e91906102f8565b61010f565b005b61008f600480360381019061008a91906102f8565b610176565b60405161009c919061033d565b60405180910390f35b6100bf60048036038101906100ba91906102f8565b6101ef565b005b6100c9610256565b6040516100d69190610365565b60405180910390f35b6100f960048036038101906100f491906102f8565b61027d565b60405161010691906103f1565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561016e5761016d61037e565b5b021790555050565b5f6001600281111561018b5761018a61037e565b5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156101e7576101e661037e565b5b149050919050565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561024e5761024d61037e565b5b021790555050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102c78261029e565b9050919050565b6102d7816102bd565b81146102e1575f5ffd5b50565b5f813590506102f2816102ce565b92915050565b5f6020828403121561030d5761030c61029a565b5b5f61031a848285016102e4565b91505092915050565b5f8115159050919050565b61033781610323565b82525050565b5f6020820190506103505f83018461032e565b92915050565b61035f816102bd565b82525050565b5f6020820190506103785f830184610356565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106103bc576103bb61037e565b5b50565b5f8190506103cc826103ab565b919050565b5f6103db826103bf565b9050919050565b6103eb816103d1565b82525050565b5f6020820190506104045f8301846103e2565b9291505056fea2646970667358221220c307455a8ae15a02730352eeeafd3b88d4c56c0bf0597a9a3ac9101d2cd286de64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1785F53C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x37E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x37E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E6 PUSH2 0x37E JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x37E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C7 DUP3 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F2 DUP2 PUSH2 0x2CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D JUMPI PUSH2 0x30C PUSH2 0x29A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31A DUP5 DUP3 DUP6 ADD PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x323 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x350 PUSH0 DUP4 ADD DUP5 PUSH2 0x32E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35F DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x378 PUSH0 DUP4 ADD DUP5 PUSH2 0x356 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3BC JUMPI PUSH2 0x3BB PUSH2 0x37E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x3CC DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3DB DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x404 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SMOD GASLIMIT GAS DUP11 RJUMPI 0x5A02 PUSH20 0x352EEEAFD3B88D4C56C0BF0597A9A3AC9101D2C 0xD2 DUP7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "60:934:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;780:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;533:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;180:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;901:90;974:9;958:5;:13;964:6;958:13;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;901:90;:::o;780:113::-;835:4;875:10;859:26;;;;;;;;:::i;:::-;;:5;:12;865:5;859:12;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;852:33;;780:113;;;:::o;620:154::-;756:10;740:5;:13;746:6;740:13;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;620:154;:::o;533:81::-;575:7;601:5;;;;;;;;;;;594:12;;533:81;:::o;180:37::-;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:180::-;2003:77;2000:1;1993:88;2100:4;2097:1;2090:15;2124:4;2121:1;2114:15;2141:111;2220:1;2213:5;2210:12;2200:46;;2226:18;;:::i;:::-;2200:46;2141:111;:::o;2258:123::-;2301:7;2330:5;2319:16;;2336:39;2369:5;2336:39;:::i;:::-;2258:123;;;:::o;2387:::-;2441:9;2474:30;2498:5;2474:30;:::i;:::-;2461:43;;2387:123;;;:::o;2516:139::-;2607:41;2642:5;2607:41;:::i;:::-;2602:3;2595:54;2516:139;;:::o;2661:230::-;2758:4;2796:2;2785:9;2781:18;2773:26;;2809:75;2881:1;2870:9;2866:17;2857:6;2809:75;:::i;:::-;2661:230;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "217600",
								"executionCost": "24519",
								"totalCost": "242119"
							},
							"external": {
								"addAdmin(address)": "24845",
								"getOwner()": "2558",
								"isAdmin(address)": "2928",
								"removeAdmin(address)": "24800",
								"roles(address)": "2987"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 477,
									"end": 526,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 477,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 477,
									"end": 526,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 477,
									"end": 526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 477,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 508,
									"end": 518,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 501,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 518,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 501,
									"end": 518,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 501,
									"end": 518,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 501,
									"end": 518,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 501,
									"end": 518,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 994,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c307455a8ae15a02730352eeeafd3b88d4c56c0bf0597a9a3ac9101d2cd286de64736f6c634300081e0033",
									".code": [
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "1785F53C"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "24D7806C"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "70480275"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "99374642"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 901,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 901,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 780,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 780,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 780,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 620,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 620,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 533,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 533,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 180,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 180,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 901,
											"end": 991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 974,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 958,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 958,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 958,
											"end": 983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 958,
											"end": 983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 780,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 859,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 864,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 859,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 885,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 852,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 620,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 740,
											"end": 766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 533,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 601,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 594,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 180,
											"end": 217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1955,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2080,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2090,
											"end": 2105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2141,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2200,
											"end": 2246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2226,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2226,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2226,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2246,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2200,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2381,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2258,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2369,
											"end": 2374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2336,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2336,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2510,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2387,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2474,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2516,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2607,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2881,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2809,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2884,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2809,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/access/RoleAccess.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAdmin(address)": "70480275",
							"getOwner()": "893d20e8",
							"isAdmin(address)": "24d7806c",
							"removeAdmin(address)": "1785f53c",
							"roles(address)": "99374642"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum RoleAccess.Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/RoleAccess.sol\":\"RoleAccess\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/RoleAccess.sol\":{\"keccak256\":\"0x3fd2eb2886ba9fe501a7657ef1633fdb16a441490e4f9b66e3d45427294f2b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6558cde8cda6f95fded84ad73efa0fd67dda014918cb040a77c6853dfe3a43f1\",\"dweb:/ipfs/QmczZ4tCa6qmFFwjbGBVbKW1Tzxi6HwNZE4nWKMmW7RjcP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/access/RoleAccess.sol:RoleAccess",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 12,
								"contract": "contracts/access/RoleAccess.sol:RoleAccess",
								"label": "roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_enum(Role)7)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(Role)7": {
								"encoding": "inplace",
								"label": "enum RoleAccess.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(Role)7)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum RoleAccess.Role)",
								"numberOfBytes": "32",
								"value": "t_enum(Role)7"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/access/RoleAccess.sol": {
				"ast": {
					"absolutePath": "contracts/access/RoleAccess.sol",
					"exportedSymbols": {
						"RoleAccess": [
							98
						]
					},
					"id": 99,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RoleAccess",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "RoleAccess",
							"nameLocation": "69:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "95:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "87:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "RoleAccess.Role",
									"id": 7,
									"members": [
										{
											"id": 4,
											"name": "NONE",
											"nameLocation": "128:4:0",
											"nodeType": "EnumValue",
											"src": "128:4:0"
										},
										{
											"id": 5,
											"name": "ADMIN",
											"nameLocation": "143:5:0",
											"nodeType": "EnumValue",
											"src": "143:5:0"
										},
										{
											"id": 6,
											"name": "CUSTOMER",
											"nameLocation": "159:8:0",
											"nodeType": "EnumValue",
											"src": "159:8:0"
										}
									],
									"name": "Role",
									"nameLocation": "112:4:0",
									"nodeType": "EnumDefinition",
									"src": "107:67:0"
								},
								{
									"constant": false,
									"functionSelector": "99374642",
									"id": 12,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "212:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "180:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
										"typeString": "mapping(address => enum RoleAccess.Role)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "188:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "180:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
											"typeString": "mapping(address => enum RoleAccess.Role)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 9,
												"name": "Role",
												"nameLocations": [
													"199:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 7,
												"src": "199:4:0"
											},
											"referencedDeclaration": 7,
											"src": "199:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$7",
												"typeString": "enum RoleAccess.Role"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "247:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$7",
																"typeString": "enum RoleAccess.Role"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 15,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "266:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
																		"typeString": "mapping(address => enum RoleAccess.Role)"
																	}
																},
																"id": 18,
																"indexExpression": {
																	"expression": {
																		"id": 16,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "272:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "276:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "272:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "266:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum RoleAccess.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 19,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																		"typeString": "type(enum RoleAccess.Role)"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "292:5:0",
																"memberName": "ADMIN",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "287:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum RoleAccess.Role"
																}
															},
															"src": "266:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742061646d696e",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "299:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4eef66133b24b6ac5e300b977ae8b291165dca7c2929c864242f475b9955ca37",
																"typeString": "literal_string \"You are not admin\""
															},
															"value": "You are not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4eef66133b24b6ac5e300b977ae8b291165dca7c2929c864242f475b9955ca37",
																"typeString": "literal_string \"You are not admin\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "258:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "258:61:0"
											},
											{
												"id": 25,
												"nodeType": "PlaceholderStatement",
												"src": "330:1:0"
											}
										]
									},
									"id": 27,
									"name": "onlyAdmin",
									"nameLocation": "235:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:0"
									},
									"src": "226:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "371:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 30,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "390:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "394:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 32,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "404:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "390:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e20706572666f726d20746869732066756e6374696f6e",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "411:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87ec00d18507973ffca613b667bdf0d2bdad0a4adcd1a64c2850ccae32e69f84",
																"typeString": "literal_string \"Only owner can perform this function\""
															},
															"value": "Only owner can perform this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87ec00d18507973ffca613b667bdf0d2bdad0a4adcd1a64c2850ccae32e69f84",
																"typeString": "literal_string \"Only owner can perform this function\""
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "382:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "382:68:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "461:1:0"
											}
										]
									},
									"id": 39,
									"name": "onlyOwner",
									"nameLocation": "360:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:2:0"
									},
									"src": "351:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "490:36:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "501:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 43,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "508:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "512:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "508:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "501:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "501:17:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:0"
									},
									"scope": 98,
									"src": "477:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "583:31:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 54,
												"nodeType": "Return",
												"src": "594:12:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "542:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:9:0"
									},
									"scope": 98,
									"src": "533:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "672:102:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 61,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
																"typeString": "mapping(address => enum RoleAccess.Role)"
															}
														},
														"id": 63,
														"indexExpression": {
															"id": 62,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "746:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "740:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 64,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "756:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																"typeString": "type(enum RoleAccess.Role)"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "761:5:0",
														"memberName": "ADMIN",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "756:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"src": "740:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$7",
														"typeString": "enum RoleAccess.Role"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "740:26:0"
											}
										]
									},
									"functionSelector": "70480275",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addAdmin",
									"nameLocation": "629:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "646:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "638:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:16:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:0:0"
									},
									"scope": 98,
									"src": "620:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "841:52:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_enum$_Role_$7",
														"typeString": "enum RoleAccess.Role"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 76,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "859:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
																"typeString": "mapping(address => enum RoleAccess.Role)"
															}
														},
														"id": 78,
														"indexExpression": {
															"id": 77,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "859:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 79,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																"typeString": "type(enum RoleAccess.Role)"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "880:5:0",
														"memberName": "ADMIN",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "875:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"src": "859:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 75,
												"id": 82,
												"nodeType": "Return",
												"src": "852:33:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "789:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:15:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:6:0"
									},
									"scope": 98,
									"src": "780:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "947:44:0",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 89,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$7_$",
																"typeString": "mapping(address => enum RoleAccess.Role)"
															}
														},
														"id": 91,
														"indexExpression": {
															"id": 90,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "958:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 92,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "974:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																"typeString": "type(enum RoleAccess.Role)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "979:4:0",
														"memberName": "NONE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "974:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$7",
															"typeString": "enum RoleAccess.Role"
														}
													},
													"src": "958:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$7",
														"typeString": "enum RoleAccess.Role"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "958:25:0"
											}
										]
									},
									"functionSelector": "1785f53c",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAdmin",
									"nameLocation": "910:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "930:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "922:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:16:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:0:0"
									},
									"scope": 98,
									"src": "901:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 99,
							"src": "60:934:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:963:0"
				},
				"id": 0
			}
		}
	}
}